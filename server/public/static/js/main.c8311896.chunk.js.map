{"version":3,"sources":["logo.svg","components/addproject/AddProject.js","components/editproject/EditProject.js","components/projectindex/ProjectIndex.js","components/addtask/AddTask.js","components/edittask/EditTask.js","components/projectdetails/ProjectDetails.js","services/AuthService.js","components/signup/Signup.js","components/login/Login.js","components/navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AddProject","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","blah","FormData","append","state","newImage","newTitle","newDescription","axios","post","concat","process","headers","Content-Type","withCredentials","then","getData","setState","catch","error","console","log","handleChange","_event$target","target","name","value","defineProperty","updateFileInState","e","files","_this2","react_default","a","createElement","className","onSubmit","type","onChange","style","marginTop","Component","EditProject","image","title","description","theRequest","theProject","_id","getAllTheProjectsInAppJS","resetEditingSituation","padding","fontSize","margin","ProjectIndex","changeEditing","whichNumber","editing","resetEdit","deleteProject","idOfProject","delete","err","showProjects","allTheProjects","filter","eachP","owner","theUser","map","project","index","key","react_router_dom","to","maxWidth","onClick","editproject_EditProject","bufferFinished","setTimeout","width","float","addproject_AddProject","react_router","AddTask","theTitle","theDescription","theProjectToAddTasksTo","EditTask","theTask","ProjectDetails","edit","deleteTask","theID","match","params","theActualProject","find","ready","paddingTop","src","tasks","length","eachTask","edittask_EditTask","addtask_AddTask","AuthService","signup","username","password","service","response","data","login","currentUser","get","logout","create","baseURL","Signup","tryToSignUp","uName","usernameInput","pWord","passwordInput","toggleForm","getUser","Login","tryToLogin","Navbar","textDecoration","pleaseLogOut","App","getAllProjects","responseFromApi","listOfProjects","getCurrentlyLoggedInUser","currentlyLoggedIn","whichForm","theForm","signupShowing","loginShowing","navbar_Navbar","signup_Signup","login_Login","exact","path","render","projectindex_ProjectIndex","assign","projectdetails_ProjectDetails","React","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.c8311896.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass AddProject extends Component {\n  constructor(props){\n      super(props);\n      this.state = { newTitle: \"\", newDescription: \"\", newImage: null };\n  }\n   \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n\n    let blah = new FormData();\n    blah.append('theImageParameter', this.state.newImage )\n    blah.append('theTitle', this.state.newTitle)\n    blah.append('theDescription', this.state.newDescription )\n\n\n    axios.post(`${process.env.REACT_APP_BASE}/projects`, blah, { headers: {\n      'Content-Type': 'multipart/form-data',\n    }, withCredentials: true })\n    .then( () => {\n        this.props.getData();\n        // this function updates the list in ProjectIndex.js\n        this.setState({newTitle: \"\", newDescription: \"\"});\n    })\n    .catch( error => console.log(error) )\n  }\n\n  handleChange = (event) => {  \n      const {name, value} = event.target;\n      this.setState({[name]: value});\n  }\n\n  updateFileInState = (e) =>{\n    this.setState({newImage: e.target.files[0]})\n  }\n\n  render(){\n    console.log(this.state)\n    return(\n      <div className=\"add-project\">\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Title:</label>\n          <input type=\"text\" name=\"newTitle\" value={this.state.newTitle} onChange={ e => this.handleChange(e)}/>\n          <label>Description:</label>\n          <textarea name=\"newDescription\" value={this.state.newDescription} onChange={ e => this.handleChange(e)} />\n          <legend style={{marginTop: '100px'}}>Choose a Picture</legend>\n          <input type=\"file\" onChange={this.updateFileInState} />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddProject;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass EditProject extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        title: this.props.theProject.title, \n        description: this.props.theProject.description,\n        image: null,\n    }\n  }\n\n  updateFileInState = (e) =>{\n    this.setState({image: e.target.files[0]})\n  }\n\n    \n  handleFormSubmit = (event) => {\n    const title = this.state.title;\n    const description = this.state.description;\n\n    let theRequest = new FormData();\n    theRequest.append('theTitle', title)\n    theRequest.append('theDescription', description)\n    theRequest.append('theImageParameter', this.state.image)\n\n    event.preventDefault();\n\n    axios.post(`http://localhost:5000/api/projects/update/${this.props.theProject._id}`,\n     theRequest)\n    .then( () => {\n        this.props.getAllTheProjectsInAppJS();\n        this.props.resetEditingSituation();\n    })\n    .catch( error => console.log(error) )\n  }\n\n  handleChange = (event) => {  \n    this.setState({\n      [event.target.name]:event.target.value\n    })\n  }\n\n \n\n  render(){\n    console.log('=====', this.state)\n    return (\n      <div>\n    \n    \n        <form onSubmit={this.handleFormSubmit}>\n\n        <div>\n\n          <input style={{padding: '5px', fontSize: '20px', margin: '5px'}} type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange}/>\n        </div>\n        \n         \n         \n          <input name=\"description\" value={this.state.description} onChange={this.handleChange} />\n          \n\n\n          <input type=\"file\" onChange={this.updateFileInState} />\n\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default EditProject;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport AddProject from '../addproject/AddProject.js';\nimport EditProject from '../editproject/EditProject.js';\n\n\n\nclass ProjectIndex extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            editing: false,\n            bufferFinished: false,\n        }\n    }\n\n    componentDidMount(){\n        setTimeout(()=>{\n            this.setState({bufferFinished: true})\n        }, 1000)\n    }\n\n\n\n    changeEditing = (whichNumber) => {\n        this.setState({editing: whichNumber})\n    } \n\n    resetEdit = () =>{\n        this.setState({editing: false})\n    }\n\n\n    deleteProject = (idOfProject) =>{\n\n        axios.delete(`http://localhost:5000/api/projects/${idOfProject}`)\n        .then(()=>{\n            this.props.getData();\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n\n\n\n    }\n\n\n  showProjects = () =>{\n    \n    const myProjects = this.props.allTheProjects.filter((eachP)=>{\n        return eachP.owner === this.props.theUser._id;\n    })\n\n    return myProjects.map((project, index) => {\n        if(this.state.editing !== index){\n\n            return (\n                <div key={project._id}>\n            <Link to={`/projects/${project._id}`}>\n              <h3>{project.title}</h3>\n            </Link>\n            <p style={{maxWidth: '400px'}} >{project.description} </p>\n\n            <button onClick={()=>{this.changeEditing(index)}} >Edit This Project</button>\n            <button onClick = {()=>{this.deleteProject(project._id)}} >Delete This Project</button>\n          </div>\n         \n         \n         )\n        } else{\n            return(\n                <EditProject \n                resetEditingSituation = {this.resetEdit} \n                theProject = {project}\n                getAllTheProjectsInAppJS = {this.props.getData}\n                 />\n            )\n        }\n\n\n        })\n      \n  }\n\n\n\n\n\n  render(){\n      if(this.props.theUser && this.props.allTheProjects){\n          return(\n              <div>\n        <div style={{width: '60%', float:\"left\"}}>\n         {this.showProjects()}\n        </div>\n        <div style={{width: '40%', float:\"right\"}}>\n            <AddProject getData={this.props.getData}/>\n        </div>\n      </div>\n    )\n}\n    else if(this.state.bufferFinished){\n        return(<Redirect to=\"/\" />)\n    } else{\n        return(<h2>loading...</h2>)\n    }\n    \n  }\n}\n\nexport default ProjectIndex;","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass AddTask extends Component {\n  constructor(props){\n      super(props);\n      this.state = { newTitle: \"\", newDescription: \"\" };\n  }\n   \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    axios.post(\"http://localhost:5000/api/tasks\", {\n       theTitle: this.state.newTitle,\n        theDescription: this.state.newDescription,\n        theProject: this.props.theProjectToAddTasksTo\n      })\n    .then( () => {\n        this.props.getData();\n        // this function updates the list in ProjectIndex.js\n        this.setState({newTitle: \"\", newDescription: \"\"});\n    })\n    .catch( error => console.log(error) )\n  }\n\n  handleChange = (event) => {  \n      const {name, value} = event.target;\n      this.setState({[name]: value});\n  }\n\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Title:</label>\n          <input type=\"text\" name=\"newTitle\" value={this.state.newTitle} onChange={this.handleChange}/>\n          <label>Description:</label>\n          <textarea name=\"newDescription\" value={this.state.newDescription} onChange={this.handleChange} />\n          \n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddTask;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass EditTask extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        title: this.props.theTask.title, \n        description: this.props.theTask.description\n     \n    }\n  }\n\n    \n  handleFormSubmit = (event) => {\n    const title = this.state.title;\n    const description = this.state.description;\n\n    event.preventDefault();\n\n    axios.post(`http://localhost:5000/api/tasks/update/${this.props.theTask._id}`,\n     { theTitle: title,\n         theDescription: description,\n         })\n    .then( () => {\n        this.props.getAllTheProjectsInAppJS();\n        this.props.resetEditingSituation();\n    })\n    .catch( error => console.log(error) )\n  }\n\n  handleChange = (event) => {  \n    this.setState({\n      [event.target.name]:event.target.value\n    })\n  }\n\n \n\n  render(){\n    return (\n      <div>\n    \n    \n        <form onSubmit={this.handleFormSubmit}>\n\n        <div>\n\n          <input style={{padding: '5px', fontSize: '20px', margin: '5px'}} type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange}/>\n        </div>\n        \n         \n         \n          <input name=\"description\" value={this.state.description} onChange={this.handleChange} />\n          \n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default EditTask;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport AddTask from '../addtask/AddTask.js';\nimport EditTask from '../edittask/EditTask.js';\n\n\nclass ProjectDetails extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            editing: false,\n        }\n        \n    }\n\n\n    resetEdit = () =>{\n        this.setState({editing: false})\n    }\n\n    edit = (whichNumber) =>{\n        this.setState({editing: whichNumber})\n    }\n\n    deleteTask = (theID) =>{\n        axios.delete('http://localhost:5000/api/tasks/'+theID)\n        .then(()=>{\n            this.props.getData();\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n \n\n\n    render(){\n        const allTheProjects = this.props.allTheProjects;\n        const theID = this.props.match.params.theID;\n\n        const theActualProject = allTheProjects.find((eachP)=>{\n            return eachP._id === theID\n        })\n\n\n\n        const showTasks = () =>{\n            return theActualProject.tasks.map((eachTask, index)=>{\n                if(this.state.editing !== index)\n              return ( <li key={eachTask._id}>\n                    <h4>{eachTask.title}</h4>\n                    <h6>{eachTask.description}</h6>\n                    <button onClick = {()=>{this.edit(index)}}>Edit This Task</button>\n                    <button onClick = {()=>{this.deleteTask(eachTask._id)}}>Delete This Task</button>\n                </li>\n              )\n              else\n              return(\n                <EditTask\n                 theTask ={eachTask}\n                 getAllTheProjectsInAppJS = {this.props.getData}\n                 resetEditingSituation = {this.resetEdit}\n                    />\n              )\n            })  \n        }\n\n\n        if(this.props.ready)\n        return(\n            <div style={{paddingTop: '100px'}}>\n\n                <div style={{float: 'left'}}>\n\n                    <h2>\n                        {theActualProject.title}\n                    </h2>            \n\n                    <h3>\n                        {theActualProject.description}\n                    </h3>\n\n\n                    <img style={{width: '400px'}} src={theActualProject.image} />\n\n                        {theActualProject.tasks.length > 0 && \n                            <ul>\n                                <h3>Tasks For This Project</h3>\n                                <hr />\n                                {showTasks()}\n                            </ul>\n                        }\n            </div>\n\n            <div className=\"right-side-column\" style={{float: 'right'}}>\n\n                <AddTask \n                theProjectToAddTasksTo = {theActualProject._id} \n                getData = {this.props.getData}\n                \n                />\n\n            </div>\n\n\n            </div>\n        )\n        else\n        return(<h3>Loading...</h3>)\n    }\n\n\n\n\n\n\n\n\n}\n\nexport default ProjectDetails;","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_AUTHSERVICE_BASE_URL,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username:username, password:password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) =>{\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  currentUser = () =>{\n    return this.service.get('/getcurrentuser')\n    .then(response => response.data)\n  }\n\n\n  logout = () =>{\n    return this.service.post('/logout', {})\n    .then(response => response.data)\n  }\n\n\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value})\n  }\n\n  tryToSignUp = (e) =>{\n      e.preventDefault();\n      const uName = this.state.usernameInput;\n      const pWord = this.state.passwordInput;\n    \n    this.service.signup(uName, pWord)\n    .then(()=>{\n        this.props.toggleForm('signup');\n        this.props.getUser();\n    })\n\n  }\n\n  \n\n  render(){\n    return(\n      <form onSubmit = {this.tryToSignUp}>\n\n          <h3>Signup For An Account</h3>\n\n          <legend>Username</legend>\n          <input value={this.state.usernameInput}\n            name=\"usernameInput\"\n            onChange={this.handleChange}\n          />\n\n          <legend>Password</legend>\n          <input value={this.state.passwordInput} \n            name=\"passwordInput\"\n            onChange={this.handleChange}\n          />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value})\n  }\n\n  tryToLogin = (e) =>{\n      e.preventDefault();\n      const uName = this.state.usernameInput;\n      const pWord = this.state.passwordInput;\n    \n      this.service.login(uName, pWord)\n      .then(()=>{\n          this.props.toggleForm('login');\n          this.props.getUser();\n      })\n\n  }\n\n  \n\n  render(){\n    return(\n      <form onSubmit = {this.tryToLogin}>\n\n          <h3>Login</h3>\n\n          <legend>Username</legend>\n          <input value={this.state.usernameInput}\n            name=\"usernameInput\"\n            onChange={this.handleChange}\n          />\n\n          <legend>Password</legend>\n          <input value={this.state.passwordInput} \n            name=\"passwordInput\"\n            onChange={this.handleChange}\n          />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport {Link, NavLink} from 'react-router-dom';\n\n\n\nfunction Navbar(props){\n\n    const doTheLogout = () =>{\n        props.pleaseLogOut()\n        .then(()=>{\n            props.getUser();\n        })\n\n    }\n\n    return(\n\n\n\n        <nav>\n            {/* {props.theUser &&  */}\n        <Link to=\"/projects\" style={{ textDecoration: 'none', margin: '10px' }}>Projects</Link>\n            {/* } */}\n\n\n        {!props.theUser && \n        <span>\n        <button onClick = {()=> props.toggleForm('login')} > Login </button>\n        <button onClick = {()=> props.toggleForm('signup')}>Sign Up</button>\n        </span>\n        }\n\n        {props.theUser && \n        <span>\n\n        <button onClick = {doTheLogout} >Log Out </button>\n\n            <span>Hello, {props.theUser.username}</span>\n        </span>\n        }\n\n    \n\n\n\n        </nav>\n    )\n\n\n\n\n\n\n\n\n}\n\nexport default Navbar;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Route, Link, Switch, Redirect} from 'react-router-dom';\nimport ProjectIndex from './components/projectindex/ProjectIndex.js'\nimport ProjectDetails from './components/projectdetails/ProjectDetails';\nimport Signup from './components/signup/Signup.js';\nimport Login from './components/login/Login.js';\n\nimport AuthService from './services/AuthService.js';\n\nimport Navbar from './components/navbar/Navbar.js'\n\n\nimport axios from 'axios';\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = { \n      listOfProjects: [],\n      currentlyLoggedIn: null,\n      ready: false,\n      signupShowing: false,\n      loginShowing: false,\n   };\n\n   this.service = new AuthService();\n  \n  \n  }\n\n  getAllProjects = () => {\n    axios.get(`${process.env.REACT_APP_BASE}/projects`, {withCredentials: true})\n    .then(responseFromApi => {\n      this.setState({\n        listOfProjects: responseFromApi.data, ready: true\n      })\n    })\n  }\n\n\ngetCurrentlyLoggedInUser = () =>{\n  this.service.currentUser()\n  .then((theUser)=>{\n    this.setState({currentlyLoggedIn: theUser, ready: true})\n  })\n  .catch(()=>{\n    this.setState({currentlyLoggedIn: null})\n  })\n}\n\n\ntoggleForm = (whichForm) =>{\n\n  let theForm;\n\n  if(whichForm === \"signup\"){\n    theForm = 'signupShowing'\n  } else {\n    theForm = 'loginShowing'\n  }\n\n  this.setState({[theForm]: !this.state[theForm]})\n\n  \n\n}\n\n\n\n  componentDidMount() {\n      this.getAllProjects();\n      this.getCurrentlyLoggedInUser();\n\n  }\n\n\nrender(){\n\n  console.log('=-=-=-=-=-=-=-',this.state);\n\n\n    return (\n      <div>\n\n\n      <Navbar \n      theUser = {this.state.currentlyLoggedIn} \n      pleaseLogOut = {()=> this.service.logout()}\n      toggleForm = {this.toggleForm}\n      getUser = {this.getCurrentlyLoggedInUser}\n      \n      />\n\n      {this.state.signupShowing && \n        <Signup getUser = {this.getCurrentlyLoggedInUser}\n        toggleForm = {this.toggleForm}\n         />\n      }\n\n      {this.state.loginShowing && \n        <Login getUser = {this.getCurrentlyLoggedInUser}\n        toggleForm = {this.toggleForm}\n        />\n      }\n\n        <Switch>\n\n          \n       \n          <Route exact path=\"/projects\" render ={(props)=>\n          <ProjectIndex\n            {...props} \n            theUser = {this.state.currentlyLoggedIn} \n            allTheProjects ={this.state.listOfProjects}\n            getData = {this.getAllProjects}\n            ready = {this.state.ready}\n            theUser = {this.state.currentlyLoggedIn}\n            />   \n          } />\n               \n\n          <Route exact path=\"/projects/:theID\" render ={(props)=> {\n            if(this.state.currentlyLoggedIn)\n            return(\n              <ProjectDetails\n              {...props} \n              allTheProjects ={this.state.listOfProjects}\n              ready = {this.state.ready}\n              getData = {this.getAllProjects}\n              theUser = {this.state.currentlyLoggedIn}\n              />\n              )\n              else \n              return(\n                <Redirect to=\"/\"/>\n              )\n            }} />\n\n\n\n        </Switch>\n\n\n      \n    \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}